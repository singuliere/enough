---

- name: apt-get install icinga2 and friends
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - icinga2
    - mariadb-server
    - mariadb-client
    - icinga2-ido-mysql

- name: apt-get install monitoring plugins
  apt:
    name: "{{ item }}"
    state: present
    install_recommends: no
  with_items:
    - "monitoring-plugins"
    - "nagios-plugins-contrib"

- name: apt-get install monitoring plugins deps
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - dnsutils
    - xz-utils

- name: wait for icinga starting up and conf creation, before tweaking it
  wait_for:
    path: /etc/icinga2/{{ item }}
  with_items:
    - conf.d
    - constants.conf
    - features-available
    - features-enabled
    - icinga2.conf
    - init.conf
    - pki
    - repository.d
    - scripts
    - zones.conf
    - zones.d

- name: master node setup
  shell: |
    icinga2 node setup \
      --master \
      --cn {{ inventory_hostname }}
  changed_when: False

- name: install zone definition on master
  template:
    src: templates/zones.conf.master
    dest: /etc/icinga2/zones.conf

- name: create zone directory on master
  file:
    path: /etc/icinga2/zones.d/master/{{ inventory_hostname }}
    state: directory

- name: install host definition
  template:
    src: templates/host.conf
    dest: /etc/icinga2/zones.d/master/{{ inventory_hostname }}/host.conf

- name: create global zone directory
  file:
    path: /etc/icinga2/zones.d/global-templates
    state: directory

- name: remove unused configuration
  file:
    path: /etc/icinga2/conf.d/{{ item }}.conf
    state: absent
  with_items:
    - apt
    - groups
    - services
    - hosts
    - commands
    - downtimes
    - notifications
    - templates
    - timeperiods
    - users

- name: create global services directory
  file:
    path: /etc/icinga2/zones.d/global-templates/services
    state: directory

- name: fix mail-service-notification.sh
  copy:
    src:  files/scripts/mail-service-notification.sh
    dest: /etc/icinga2/scripts/mail-service-notification.sh

- name: deploy our global configuration
  copy:
    src:  files/{{ item }}.conf
    dest: /etc/icinga2/zones.d/global-templates/{{ item }}.conf
  with_items:
    - commands
    - downtimes
    - notifications
    - templates
    - timeperiods
    - groups
    - services/apt
    - services/base
    - services/database
    - services/disks
    - services/dns
    - services/http
    - services/mail
    - services/volumes

- name: deploy our templated configuration
  template:
    src:  templates/{{ item }}.conf
    dest: /etc/icinga2/zones.d/global-templates/{{ item }}.conf
  with_items:
    - users

- name: retrieve generated DB credentials
  shell: |
    awk -F '"' '$1 ~ "password" {print $2}' /etc/icinga2/features-available/ido-mysql.conf
  register: output
  changed_when: False

- set_fact:
    icinga2_dbpass: "{{ output.stdout }}"

- name: create icinga2 DB
  command: mariadb -e "CREATE DATABASE IF NOT EXISTS icinga2;"
  changed_when: False

- name: create access to icinga2 DB
  command: mariadb -e "GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX, EXECUTE ON icinga2.* TO 'icinga2'@'localhost' IDENTIFIED BY '{{ icinga2_dbpass }}';"
  changed_when: False

- name: create icinga2 DB scheme
  shell: mariadb icinga2 < /usr/share/icinga2-ido-mysql/schema/mysql.sql || true
  changed_when: False

- name: enable icinga2 features
  icinga2_feature:
    name: "{{ item }}"
    state: present
  with_items:
    - command
    - ido-mysql
  notify: reload icinga2

- name: apt-get install nginx, icingaweb2 and friends
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - "nginx-full"
    - "icingacli"
    - "icingaweb2"
    - "icingaweb2-module-monitoring"
    - "php-mysql"
    - "php7.0-intl"
    - "php7.0-fpm"

- name: append icingaweb2 group to www-data
  command: usermod -a -G icingaweb2 www-data
  changed_when: False

- name: install nginx configuration
  template:
    src:  templates/nginx.conf
    dest: /etc/nginx/sites-available/{{ inventory_hostname }}
  changed_when: False

- name: unset default nginx configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: generate strongers dhparams
  command: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  creates: /etc/nginx/dhparams.pem

- name: setup gninx dhparams
  lineinfile:
    path: /etc/nginx/nginx.conf
    line: ssl_dhparam /etc/nginx/dhparams.pem;
    insertafter: "ssl_prefer_server_ciphers"

- name: set up nginx configuration
  file:
    src:  /etc/nginx/sites-available/{{ inventory_hostname }}
    dest: /etc/nginx/sites-enabled/{{ inventory_hostname }}
    state: link
  notify: reload nginx

- name: 'hash icingaweb2 user password'
  shell: openssl passwd -1 "{{ icingaweb2_user_pass }}"
  register: output

- set_fact:
    icingaweb2_user_hash: "{{ output.stdout }}"

- set_fact:
    icingaweb2_dbpass: "{{ lookup('password', '/tmp/icingaweb2_dbpass') }}"

- name: create icingaweb2 DB
  command: mariadb -e "CREATE DATABASE IF NOT EXISTS icingaweb2;"
  changed_when: False

- name: create access to icingaweb2 DB
  command: mariadb -e "GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX, EXECUTE ON icingaweb2.* TO 'icingaweb2'@'localhost' IDENTIFIED BY '{{ icingaweb2_dbpass }}';"
  changed_when: False

- name: create icingaweb2 DB scheme
  shell: mariadb icingaweb2 < /usr/share/icingaweb2/etc/schema/mysql.schema.sql || true
  changed_when: False

- name: set up icingaweb2 configuration
  template:
    src: templates/{{ item }}
    dest: /etc/icingaweb2/{{ item }}
    owner: www-data
    group: icingaweb2
  with_items:
    - authentication.ini
    - config.ini
    - groups.ini
    - resources.ini
    - roles.ini

- name: create icingaweb2 monitoring configuration directory
  file:
    path: /etc/icingaweb2/modules/monitoring/
    state: directory

- name: set up icingaweb2 monitoring configuration
  copy:
    src: files/icingaweb2/{{ item }}
    dest: /etc/icingaweb2/modules/monitoring/{{ item }}
    owner: www-data
    group: icingaweb2
  with_items:
    - backends.ini
    - commandtransports.ini
    - config.ini

- name: set up icingaweb2 user
  command: mariadb icingaweb2 -e "INSERT IGNORE INTO icingaweb_user (name, active, password_hash) VALUES ('{{ icingaweb2_user }}', 1, '{{ icingaweb2_user_hash }}');"
- name: enable translation module
  command: icingacli module enable translation
  changed_when: False

- name: enable monitoring module
  command: icingacli module enable monitoring
  changed_when: False
