apply Service for (http_vhost => config in host.vars.http_vhosts) {
  import host.vars.service_template

  check_command = "http"
  vars.http_address = config.http_vhost
  command_endpoint = NodeName

  vars += config
}

apply Service "Check no googleapis.com on " for (http_vhost => config in host.vars.http_vhosts) {
    import host.vars.service_template

    check_command = "negate"
    vars.negate_command = PluginDir + "/check_http " + config.http_vhost + " -f follow -H " + config.http_vhost + " -u " + config.http_uri + " -s googleapis.com"

	  command_endpoint = NodeName
}

apply Service "Check no cloudflare.com on " for (http_vhost => config in host.vars.http_vhosts) {
    import host.vars.service_template

    check_command = "negate"
    vars.negate_command = PluginDir + "/check_http " + config.http_vhost + " -f follow -H " + config.http_vhost + " -u " + config.http_uri + " -s cloudflare.com"

	  command_endpoint = NodeName
}

apply Service "Check no google-analytics.com on " for (http_vhost => config in host.vars.http_vhosts) {
    import host.vars.service_template

    check_command = "negate"
    vars.negate_command = PluginDir + "/check_http " + config.http_vhost + " -f follow -H " + config.http_vhost + " -u " + config.http_uri + " -s google-analytics.com"

	  command_endpoint = NodeName
}

apply Service "Check no gravatar.com " for (http_vhost => config in host.vars.http_vhosts) {
    import host.vars.service_template

    check_command = "negate"
    vars.negate_command = PluginDir + "/check_http " + config.http_vhost + " -f follow -H " + config.http_vhost + " -u " + config.http_uri + " -s gravatar.com"

	  command_endpoint = NodeName
}

apply Service "Check TLS certificate " for (http_vhost => config in host.vars.http_vhosts) {
    import host.vars.service_template

    check_command = "http"
    vars.http_address = config.http_vhost
    vars.http_certificate = 21
    vars.http_sni = true
	  command_endpoint = NodeName

    vars += config
    assign where config.http_ssl == true
}

apply Service "Process Apache2" {
  import host.vars.service_template

  check_command = "procs"
  command_endpoint = host.vars.client_endpoint

  vars.procs_command = "apache2"
  vars.procs_critical = "1:1024"

  assign where host.vars.httpd == "apache" || host.vars.httpd == "apache2"
}

apply Service "Process NginX" {
  import host.vars.service_template

  check_command = "procs"
  command_endpoint = host.vars.client_endpoint

  vars.procs_command = "nginx"
  vars.procs_critical = "1:1024"

  assign where host.vars.httpd == "nginx"
}

