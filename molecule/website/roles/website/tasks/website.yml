---
- name: apt-get install git
  apt:
    name: git
    state: present

- name: apt-get install virtualenv
  apt:
    name: virtualenv
    state: present

- name: apt-get install python-pip
  apt:
    name: python-pip
    state: present

- name: pip install setuptools
  pip:
    name: setuptools

- name: pip install docker
  pip:
    name: docker

- name: chown debian /srv
  file:
    path: /srv
    owner: debian

- name: git clone https://lab.securedrop.club/main/website
  git:
    repo: "https://lab.securedrop.club/main/website"
    force: yes
    dest: /srv/website
  become: False

- name: Allow debian user to use docker without sudo
  user:
    name: debian
    groups: docker

- name: reset ssh connection to be in the docker group
  # ugly hack in replacement to
  # meta: reset_connection
  # The later fails in this way:
  # https://github.com/ansible/ansible/issues/27520#issuecomment-321966784
  local_action:
    module: file
    path: "~/.ansible/cp/{{ ansible_host }}-{{ ansible_port }}-{{ ansible_user }}"
    state: absent
  become: False

- name: apt-get install rsync
  apt:
    name: rsync
    state: present

- apt_repository:
    repo: deb http://deb.debian.org/debian/ testing main
    state: present

- name: apt-get install hugo
  apt:
    name: hugo
    state: present

- name: /var/www/html is owned by debian
  file:
    path: /var/www/html
    state: directory
    owner: debian

- name: Copy update-website.sh
  template:
    src: update-website.sh.j2
    dest: /srv/update-website.sh
    owner: debian
    mode: "0755"

- name: Copy crontab
  template:
    src: crontab
    dest: /srv/crontab
    owner: debian
    mode: "0600"
  register: crontab

- name: update-website.sh log file
  file:
    path: /var/log/update-website.log
    state: touch
    owner: debian

- name: install /etc/logrotate.d/website-logrotate
  copy:
    src: website-logrotate
    dest: /etc/logrotate.d/website-logrotate

- name: Activate crontab
  shell: crontab /srv/crontab
  when: crontab|changed
  become: False

- name: start https-portal
  docker_container:
    name: https-portal
    image: steveltn/https-portal:1
    restart_policy: always
    ports:
      - '80:80'
      - '443:443'
    env:
      DOMAINS: '{{ website_vhost_fqdn }} -> http://{{ website_vhost_fqdn }}:8080, www.{{ website_vhost_fqdn }} -> http://{{ website_vhost_fqdn }}:8080'
      STAGE: "{% if with_fake_LE is undefined %}production{% else %}staging{% endif %}"
    state: "{% if with_https is defined and with_https == true %}started{% else %}absent{% endif %}"
