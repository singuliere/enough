# adapted from molecule/cookiecutter/scenario/driver/openstack/{{cookiecutter.molecule_directory}}/{{cookiecutter.scenario_name}}/create.yml
- name: Create
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    molecule_file: "{{ lookup('env', 'MOLECULE_FILE') }}"
    molecule_instance_config: "{{ lookup('env', 'MOLECULE_INSTANCE_CONFIG') }}"
    molecule_yml: "{{ lookup('file', molecule_file) | from_yaml }}"
  tasks:

    - name: create instances
      register: out
      shell: |
        python -m enough.internal.cmd host create --driver {{ infrastructure_driver }} --format json {{ item.name }}
      loop: "{{ molecule_yml.platforms }}"

    - name: stacks
      set_fact:
        stacks: |
          [
            {% for s in out.results %}
            {{ s.stdout }},
            {% endfor %}
          ]

    - debug:
        var: stacks

    - name: instance configuration for molecule
      set_fact:
        instance_conf: |
          [
            {% for s in stacks %}
            {
               'instance': '{{ s.name }}',
               'address': '{{ s.ip }}',
               'identity_file': '{{ ssh_private_keyfile }}',
               'port': '{{ s.port }}',
               'user': '{{ s.user }}',
            },
            {% endfor %}
          ]

    - name: if bind-host exists, create and delegate a new test subdomain
      shell: |
        python -m enough.internal.cmd --domain {{ production_domain }} create test subdomain

    - name: Dump instance config
      copy:
        # NOTE(retr0h): Workaround for Ansible 2.2.
        #               https://github.com/ansible/ansible/issues/20885
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"
